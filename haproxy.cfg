userlist authenticated
  user "$HTTP_BASIC_AUTH_USER" insecure-password "$HTTP_BASIC_AUTH_PASSWORD"

global
  log 127.0.0.1 local2 info
  pidfile /run/haproxy.pid
  daemon

  # Default SSL material locations
  ca-base /certs

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  ssl-default-bind-ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
  ssl-default-bind-options no-sslv3 no-tlsv10
  ssl-default-server-ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH

  tune.ssl.default-dh-param 2048
  tune.ssl.cachesize 1000000
  tune.ssl.lifetime 3600

defaults
  log global
  mode http
  option httplog
  option dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

# HAProxy Stats (optional - for monitoring HAProxy itself)
listen stats
  bind *:1936
  stats enable
  stats uri /
  stats hide-version
  stats auth admin:admin

# Main frontend - handles all HTTPS traffic on port 443
frontend https_frontend
  bind *:443 ssl crt /certs/live/${DOMAIN}/fullchain.pem no-sslv3
  mode http
  http-request set-header X-Forwarded-For %[src]
  reqadd X-Forwarded-Proto:\ https
  option http-server-close
  
  # Route based on path
  acl is_dozzle path_beg /dozzle
  acl is_glances path_beg /glances
  acl is_netdata path_beg /netdata
  acl is_webdav path_beg /webdav
  
  # Authentication checks are enforced in backends
  
  # Route to appropriate backend
  use_backend dozzle_backend if is_dozzle
  use_backend glances_backend if is_glances
  use_backend netdata_backend if is_netdata
  use_backend webdav_backend if is_webdav
  
  # Default to monitoring UI
  default_backend monitoring_ui_backend

# Monitoring UI backend (main dashboard)
backend monitoring_ui_backend
  mode http
  balance leastconn
  server monitoring-ui monitoring-ui:80 check

# Dozzle backend
backend dozzle_backend
  mode http
  balance leastconn
  http-request auth realm haproxy_basic_auth unless { http_auth(authenticated) }
  http-request set-path %[path,regsub(^/dozzle,/,)]
  server dozzle dozzle:8080 check

# Glances backend
backend glances_backend
  mode http
  balance leastconn
  http-request auth realm haproxy_basic_auth unless { http_auth(authenticated) }
  http-request set-path %[path,regsub(^/glances,/,)]
  server glances glances:61208 check

# Netdata backend
backend netdata_backend
  mode http
  balance leastconn
  http-request auth realm haproxy_basic_auth unless { http_auth(authenticated) }
  http-request set-path %[path,regsub(^/netdata,/,)]
  server netdata netdata:19999 check

# WebDAV backend
backend webdav_backend
  mode http
  balance leastconn
  http-request set-path %[path,regsub(^/webdav,/,)]
  server webdav webdav:80 check